@model LCCS_School_Parent_Communication_System.viewModels.AddScheduleModal


    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                minDate: new Date(),


            });
        });
    </script>

<html>
<body>
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-red">
                <h4 class="modal-title text-white" id="title">Add Schedule</h4>
                <button type="button" id="exit" class="close btn bg-red" data-dismiss="modal">
                    <span aria-hidden="true" class="text-white">&times;</span>
                </button>
            </div>

            <div class="modal-body">
                @if (ViewBag.complete != null)
                {
                    <div class="alert alert-success" id="hide">
                        @ViewBag.complete
                    </div>
                }

                @if (ViewBag.error != null)
                {
                    <div class="alert alert-danger" id="hide">
                        @ViewBag.error
                    </div>
                }

                <div class="d-flex justify-content-center ">
                    <div id="holder" class="d-none text-danger" role="status">

                    </div>
                </div>


                <form action="AddSchedule" id="error" autocomplete="off">

                    <div class="form-group">
                        @*<div class="container row">*@

                        @Html.LabelFor(a => a.scheduleDate, new { @class = "form-label mt-2" })
                        <div class="container row"> @Html.TextBoxFor(e => e.scheduleDate, new {@class = "datepicker form-control",@id="inputs"})</div>
                        <div class="container row">@Html.ValidationMessageFor(v => v.scheduleDate, null, new { @class = "text-danger", @id="message"})</div>

                        @*</div>*@
                    </div>
                    <div class="form-group">
                        

                        <div class="col-12">
                            @Html.LabelFor(l => l.scheduleFor, new { @class = "form-label mt-2" })
                            <div class="container row">@Html.DropDownListFor(tb => tb.scheduleFor, new SelectList(Model.scheduleFor), "Select Schedule Reason", new { @class = "form-control", onchange = "bothDisabled()" })</div>
                            <div class="container row">@Html.ValidationMessageFor(v => v.scheduleFor, "", new { @class = "text-danger" })</div>
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(l => l.subject, new { @class = "form-label mt-2" })
                        <div class="container row">@Html.EditorFor(e => e.subject, new { @class = "form-control" })</div>
                        <div class="container row">@Html.ValidationMessageFor(v => v.subject, null, new { @class = "text-danger" })</div>
                    </div>

                    <div class="form-group">
                        <div class="container row">
                            <div class="col-5">
                                @Html.LabelFor(l => l.grade, new { @class = "form-label mt-2" })
                                <div class="container row">@Html.EditorFor(e => e.grade, new { htmlAttributes = new { @min = 9, @max = 12 } })</div>
                                <div class="container row">@Html.ValidationMessageFor(v => v.grade, null, new { @class = "text-danger" })</div>
                            </div>
                            <div class="col-1"></div>
                            <div class="col-5">
                                @Html.LabelFor(l => l.percentage, new { @class = "form-label mt-2" })
                                <div class="container row">@Html.EditorFor(e => e.percentage,new { htmlAttributes = new { @min = 5, @max = 100, @step = 5 } })</div>
                                <div class="container row">@Html.ValidationMessageFor(v => v.percentage, null, new { @class = "text-danger" })</div>
                            </div>
                        </div>
                    </div>

                    
                </form>
            </div>

            <div class="modal-footer">

                <button type="button" class="btn btn-primary" id="save" data-save="modal">Add</button>
            </div>
        </div>
    </div>

</body>
</html>
<style>
    .row, .row > * {
        padding: 0 !important;
        margin-right: 0 !important;
        margin-left: 0 !important;
    }
</style>

<script type="text/javascript">

    $(document).ready(function () {
        var view = $('#myModal');
        const element = document.getElementById("holder");
        const hidden = document.getElementById('hide');
        const save = document.getElementById('save');
        const exit = document.getElementById('exit');
        const messa=document.getElementById('message');
        
        $("#inputs").keydown(function (event) {
            event.preventDefault();
        });

        $("#inputs").change(function (event) {
            messa.innerHTML = '';
            document.getElementById("inputs").classList.remove("input-validation-error");
            
        });

        view.on('click', '[data-save="modal"]', function (event) {
            
            $.validator.unobtrusive.parse("#error");
            ValidationForm();
            if (ValidationForm()) {
                if (element != null) {
                    element.classList.remove("d-none");
                    element.classList.add("spinner-border");
                    save.classList.add("disabled");
                    exit.classList.add("disabled");
                }
                if (hidden != null) {
                    hidden.classList.add("d-none");
                }
            }
        });


        function ValidationForm() {
            if (!$("#error").valid()) {
                return false;
            }
            else {
                return true;
            }
        }
    });

    function bothDisabled() {
            var dDown = document.getElementById("scheduleFor");
            var subj = document.getElementById("subject");
            var percent = document.getElementById("percentage");

            var strUser = dDown.options[dDown.selectedIndex].value;
            if (strUser == "Reassessment") {
                percent.setAttribute("disabled","disabled");
                subj.setAttribute("disabled", "disabled");
            }
            else {
                percent.removeAttribute("disabled");
                subj.removeAttribute("disabled");
            }
        }
</script>

