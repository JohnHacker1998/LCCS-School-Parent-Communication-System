@model LCCS_School_Parent_Communication_System.viewModels.assignmentViewModel
@{
    ViewBag.Title = "assignmentManagement";
}
@*<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>


    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>*@

<div class="modal" id="myModal" role="dialog" data-backdrop="static" tabindex="-1"></div>
<script>
    $(document).ready(function () {
        $('#tblAssignmentList').DataTable();
    });
</script>

@using (Html.BeginForm("assignmentManagement", "THome", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(a => a.assignmentID);

    @Html.LabelFor(a => a.assignmentType);
    <select id="assignmentType" name="assignmentType" readonly class="form-control">
        @foreach (var i in Model.assignmentType)
        {
            if (i == ViewBag.selectedType)
            {
                <option value=@i selected>@i</option>
            }
            else
            {
                <option value=@i>@i</option>
            }
        }
    </select>

    <div id="groupRelated" style="display:none">
        @Html.LabelFor(a => a.numberOfGroupMembers);
        @Html.EditorFor(a => a.numberOfGroupMembers);
    </div>
    @Html.LabelFor(a => a.sectionID)
    <select id="sectionName" name="sectionName" readonly class="form-control">
        @foreach (var i in Model.sectionList)
        {
            if (i == ViewBag.selectedSection)
            {
                <option value=@i selected>@i</option>
            }
            else
            {
                <option value=@i>@i</option>
            }
        }
    </select>
    @Html.LabelFor(a => a.submissionDate);
    @Html.EditorFor(a => a.submissionDate, new { htmlAttributes = new { @class = "datepicker form-control" } });

    @Html.LabelFor(a => a.assignmentDocument);
    <input type="file" name="file" class="form-control" />
    <input type="submit" name="add" value="Add" />
    <input type="submit" name="update" value="Update" />


}

@*<script type="text/javascript">

        $(document).ready(function () {
            var view = $('#myModal');
            $('[data-toggle="modal"]').click(function () {
                var url = $(this).data('url');
                $.get(url).done(function (data) {
                    view.html(data);
                    view.modal('show');
                });
            });
            $('[data-toggle="updateModal"]').click(function () {
                var url = $(this).data('url') + '?id=' + $(this).data('id');
                $.get(url).done(function (data) {
                    view.html(data);
                    view.modal('show');
                });
            });
            view.on('click', '[data-save="modal"]', function (event) {

                var form = $(this).parents('.modal').find('form');
                var actionUrl = form.attr('action');
                var sendData = form.serialize();
                $.validator.unobtrusive.parse("#error");
                ValidationForm();
                if (ValidationForm()) {
                    $.post(actionUrl, sendData).done(function (data) {
                        //view.modal('hide');
                        view.html(data);
                        view.modal('show');
                    });
                }

            });

            view.on('click', '[data-dismiss="modal"]', function (event) {
                view.modal('hide');
            });


            function ValidationForm() {
                if (!$("#error").valid()) {
                    return false;
                }
                else {
                    return true;
                }
            }
        });

    </script>*@



<div class="container mb-3 mt-3">
    <table class="table table-striped table-bordered" id="tblAssignmentList">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">SectionID</th>
                <th scope="col">Section</th>
                <th scope="col">Assignment Type</th>
                <th scope="col">Submission Date</th>

                <th scope="col">Number of Members</th>
                
                <th scope="col">@*<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#assignmentViewModel" data-url="@Url.Action("addAssignment")">Register</button>*@</th>
            </tr>
        </thead>

        @foreach (var k in Model.listAssignment)
        {
            <tbody>
                <tr>
                    <td>@k.assignmentId</td>
                    <td>@k.sectionID</td>
                    <td>@k.section.sectionName</td>
                    <td>@k.assignmentType</td>
                    <td>@k.submissionDate.ToShortDateString()</td>

                    <td>@k.numberOfMembers</td>

                    <td>
                        @using (Html.BeginForm("assignmentManagement", "THome", new { assId = k.assignmentId.ToString() }, FormMethod.Post))
                        {

                            <input type="submit" name="delete" value="Delete" class="btn btn-danger" />
                            <input type="submit" name="select" value="Select" class="btn btn-primary"/>

                        }
                        @* <button type="button" class="btn btn-primary" data-toggle="updateModal" data-target="#AcademicYearViewModel" data-url="@Url.Action("updateAssignment")" data-id="@k.assignmentId.ToString()">Edit</button>*@

                        @if (k.assignmentType == "Group" && k.groupList == null)
                        {

                            <input type="submit" class="btnModal btn btn-primary" id="btnModal" value="Create Group" />

                        }
                    </td>
                </tr>
            </tbody>

        }

    </table>
</div>
    <div class="modal" tabindex="-1" role="dialog" id="exampleModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Group</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">

                    @using (Html.BeginForm("assignmentManagement", "THome", FormMethod.Post, new { id = "groupForm" }))
                    {
                        <div class="form-group">
                            @Html.LabelFor(p => p.assignmentID, new { @class = "form-label mt-2" })
                            <div class="container row"> @Html.TextBoxFor(p => p.assignmentID, new { @id = "assignmentID1", @name = "assignmentID1", @readonly = true })</div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(p => p.sectionName, new { @class = "form-label mt-2" })
                            <div class="container row"> @Html.TextBoxFor(p => p.sectionName, new { @id = "sectionName1", @name = "sectionName1", @readonly = true })</div>

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(p => p.numberOfGroupMembers, new { @class = "form-label mt-2" })
                            <div class="container row"> @Html.TextBoxFor(p => p.numberOfGroupMembers, new { @id = "gMembers", @name = "gMembers", @readonly = true })</div>

                        </div>
                        <div class="row">
                            <div class="col-6">
                                <select id="stdList" class="studentList1" multiple>
                                </select>
                            </div>
                            <div class="col-6">
                                <select id="groupedStudentList" class="studentList2" name="groupedStudentList" multiple>
                                </select>
                            </div>
                        </div>
                        <input type="text" name="txtValue" id="txtValue" style="display:none" />
                        <input type="submit" id="btnSubmitGrouping" name="btnSubmitGrouping" value="Submit Group" style="display:none" />

                    }

                    <input type="submit" id="btnAssign" name="btnAssign" value="Assign" />
                    <input type="submit" id="btnRemove" name="btnRemove" value="Remove" />
                </div>
                <div class="modal-footer">
                    @* <button type="button" class="btn btn-primary">Save changes</button>*@
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    @if (ViewBag.successfulMessage != " " && ViewBag.successfulMessage != null)
    {
        <div class="alert alert-success">
            @ViewBag.ViewBag.successfulMessage
        </div>
    }
    @if (ViewBag.failedMessage != " " && ViewBag.failedMessage != null)
    {
        <div class="alert alert-danger">
            <script type="text/javascript">
                function test() { $.growl({ title: "Growl", message: "The kitten is awake!" }); }

                test();</script>
            @ViewBag.failedMessage
        </div>
    }


    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker').datepicker({
                minDate: new Date(),


            });
            $('#assignmentType').change(function () {

                $("#assignmentType").change(function () {
                    var a = $("#assignmentType Option:Selected").text();
                    if (a == "Group") {
                        $("#groupRelated").show();

                    }
                    else {
                        $("#groupRelated").hide();
                    }
                })


            }).change();

            $(".modal").on("hidden.bs.modal", function () {
                $(".modal-body1").html("");
            });
        });


    </script>
    <script>

    $(document).ready(function () {

        $('.btnModal').on('click', function () {

            $('#exampleModal').modal('show');

            $tr = $(this).closest('tr');

            var data = $tr.children("td").map(function () {
                return $(this).text();
            }).get();

            console.log(data);

            $('#assignmentID1').val(data[0]); //set value
            $('#sectionID1').val(data[1]); //set value
            $('#sectionName1').val(data[2]); //set value
            $('#gMembers').val(data[5]); //set value

            var arr = JSON.parse('@Html.Raw(Json.Encode(@Model.studentArray))')

            $('#stdList').empty()
            $('#groupedStudentList').empty()
           for (let x = 0; x < @Model.studentArray.Length; x++){
            if (arr[x] == data[2]) {

                $('#stdList').append('<option value=' + arr[x+1] + '>' + arr[x+1] + '</option>');

            }
            x++;
        }
            $('option').mousedown(function (e) {

                  e.preventDefault();
                    $(this).prop('selected', !$(this).prop('selected'));
                    return false;

            });



        });
    });



    </script>
    <script type="text/javascript">


        $(document).ready(function () {
            $('#btnAssign').on('click', function () {
                $("#stdList option[value='']").each(function () {
                    $(this).remove();
                });
                $("#groupedStudentList option[value='']").each(function () {
                    $(this).remove();
                });
                var custom = $("#gMembers").val()
                console.log(custom)
                var count = $("#stdList :selected").length;
                console.log(count)
                if (count > custom) {
                    alert("Hello! I am an alert box!!");
                }
                else if (count <= custom) {
                    var name = $("#stdList :selected").text();
                    var tbl = name.split(',');
                    var values = "*";
                    var selected = $("#stdList option:selected");
                    selected.each(function () {
                        values += $(this).html() + "-";

                    });

                    $('#groupedStudentList').append('<option value=' + values + '>' + values + '</option>');
                    $("#stdList option:selected").remove();
                    console.log(values)
                    if ($('#stdList').children().length == 0) {
                        $("#btnSubmitGrouping").show();
                    }
                    else {
                        $("#btnSubmitGrouping").hide();
                    }
                }


            });
        });
        $(document).ready(function () {
            $('#btnRemove').on('click', function () {
                $("#stdList option[value='']").each(function () {
                    $(this).remove();
                });
                $("#groupedStudentList option[value='']").each(function () {
                    $(this).remove();
                });

                var count = $("#groupedStudentList :selected").length;
                var name = $("#groupedStudentList :selected").text();
                if (count == 1) {
                    let text = name;
                    let txtCount = text.length;
                    let text2 = text.substring(1, txtCount);
                    var arrFirst = text2.split("-");
                    for (let y = 0; y < arrFirst.length; y++) {
                        $('#stdList').append('<option value=' + arrFirst[y] + '>' + arrFirst[y] + '</option>');
                        $("#groupedStudentList option:selected").remove();

                    }
                    if ($('#stdList').children().length == 0) {
                        $("#btnSubmitGrouping").show();
                    }
                    else {
                        $("#btnSubmitGrouping").hide();
                    }
                }
            });
        });
        $(document).ready(function () {
            $('#btnSubmitGrouping').on('click', function () {
                $("#groupedStudentList option").prop('selected', true);
                var value = $("#groupedStudentList option:selected").text();
                $('#txtValue').val(value);
            });

        });
    </script>


